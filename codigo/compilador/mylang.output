State 15 conflicts: 1 shift/reduce
State 68 conflicts: 1 reduce/reduce
State 105 conflicts: 1 reduce/reduce


Grammar

    0 $accept: PROGRAMA $end

    1 @1: /* empty */

    2 @2: /* empty */

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    4 DECLARACIONES: DECLARACION DECLARACIONES
    5              | /* empty */

    6 DECLARACION: CLASE
    7            | VARIABLES
    8            | FUNCIONES

    9 CLASE: clase id_ HEREDA punto_coma l_brace ATRIBUTOS METODOS r_brace punto_coma

   10 HEREDA: hereda id_
   11       | /* empty */

   12 ATRIBUTOS: atributos VARS
   13          | /* empty */

   14 METODOS: metodos FUNCIONES
   15        | /* empty */

   16 VARIABLES: variables VARS

   17 VARS: VAR VARS_

   18 VARS_: VARS
   19      | /* empty */

   20 @3: /* empty */

   21 VAR: TIPO_VAR @3 dos_puntos VAR_IDS punto_coma

   22 @4: /* empty */

   23 VAR_IDS: id_ @4 ARR VAR_IDS_

   24 @5: /* empty */

   25 @6: /* empty */

   26 ARR: l_bracket @5 cte_int @6 ARR_ r_bracket
   27    | /* empty */

   28 @7: /* empty */

   29 ARR_: coma @7 cte_int
   30     | /* empty */

   31 VAR_IDS_: coma VAR_IDS
   32         | /* empty */

   33 TIPO_SIMPLE: n_int
   34            | n_float
   35            | n_char

   36 TIPO_VAR: TIPO_SIMPLE
   37         | id_

   38 FUNCIONES: FUNCION FUNCIONES_

   39 FUNCIONES_: FUNCIONES
   40           | /* empty */

   41 @8: /* empty */

   42 @9: /* empty */

   43 @10: /* empty */

   44 @11: /* empty */

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

   46 FUNC_VARIABLES: VARIABLES
   47               | /* empty */

   48 TIPO_RET: TIPO_SIMPLE
   49         | n_void

   50 @12: /* empty */

   51 PARAMETROS: TIPO_SIMPLE dos_puntos id_ @12 PARAMETROS_
   52           | /* empty */

   53 PARAMETROS_: coma PARAMETROS
   54            | /* empty */

   55 @13: /* empty */

   56 @14: /* empty */

   57 @15: /* empty */

   58 ASIGNACION: id_ @13 ASIG asignador @14 EXP @15 punto_coma

   59 ASIG: punto id_

   60 @16: /* empty */

   61 @17: /* empty */

   62 ASIG: l_bracket @16 EXP @17 ASIG_ r_bracket
   63     | /* empty */

   64 ASIG_: coma EXP
   65      | /* empty */

   66 @18: /* empty */

   67 @19: /* empty */

   68 @20: /* empty */

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 FUNC_PARAM r_paren @20 punto_coma

   70 @21: /* empty */

   71 @22: /* empty */

   72 LLAMADA_RET: id_ @21 FUNC_ l_paren @22 FUNC_PARAM r_paren

   73 FUNC_: punto id_
   74      | /* empty */

   75 @23: /* empty */

   76 FUNC_PARAM: EXP @23 FUNC_PARAM_
   77           | /* empty */

   78 FUNC_PARAM_: coma FUNC_PARAM
   79            | /* empty */

   80 @24: /* empty */

   81 DECISION: si l_paren EXP r_paren @24 entonces l_brace ESTATUTOS r_brace DECISION_

   82 @25: /* empty */

   83 DECISION_: sino @25 l_brace ESTATUTOS r_brace
   84          | /* empty */

   85 @26: /* empty */

   86 @27: /* empty */

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 hacer l_brace ESTATUTOS r_brace

   88 @28: /* empty */

   89 @29: /* empty */

   90 @30: /* empty */

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

   92 ESCRITURA: escribe l_paren PRINTABLE r_paren punto_coma

   93 PRINTABLE: E PRINTABLE_

   94 PRINTABLE_: coma PRINTABLE
   95           | /* empty */

   96 E: cte_string
   97  | EXP

   98 LECTURA: lee l_paren READABLE r_paren punto_coma

   99 @31: /* empty */

  100 READABLE: id_ @31 READABLE_

  101 READABLE_: coma READABLE
  102          | /* empty */

  103 @32: /* empty */

  104 RETORNO: regresa l_paren EXP r_paren @32 punto_coma

  105 EXP: EXP_Q

  106 @33: /* empty */

  107 EXP_Q: T_EXP @33 EXP_

  108 @34: /* empty */

  109 EXP_: op_or @34 EXP
  110     | /* empty */

  111 @35: /* empty */

  112 T_EXP: G_EXP @35 T_EXP_

  113 @36: /* empty */

  114 T_EXP_: op_and @36 T_EXP
  115       | /* empty */

  116 G_EXP: M_EXP G_EXP_

  117 G_EXP_: OPER_REL M_EXP
  118       | /* empty */

  119 OPER_REL: op_rel

  120 @37: /* empty */

  121 M_EXP: T @37 M_EXP_

  122 @38: /* empty */

  123 M_EXP_: mas @38 M_EXP

  124 @39: /* empty */

  125 M_EXP_: menos @39 M_EXP
  126       | /* empty */

  127 @40: /* empty */

  128 T: F @40 T_

  129 @41: /* empty */

  130 T_: mult @41 T

  131 @42: /* empty */

  132 T_: divi @42 T
  133   | /* empty */

  134 @43: /* empty */

  135 F: l_paren @43 EXP_Q r_paren
  136  | CTE

  137 @44: /* empty */

  138 F: id_ @44 ASIG
  139  | LLAMADA_RET

  140 CTE: cte_int
  141    | cte_float
  142    | cte_char

  143 ESTATUTOS: ESTATUTO ESTATUTOS
  144          | /* empty */

  145 ESTATUTO: ASIGNACION
  146         | LLAMADA_VOID
  147         | LECTURA
  148         | ESCRITURA
  149         | DECISION
  150         | CONDICIONAL
  151         | NOCONDICIONAL
  152         | RETORNO


Terminals, with rules where they appear

$end (0) 0
error (256)
programa (258) 3
principal (259) 3
si (260) 81
entonces (261) 81
sino (262) 83
mientras (263) 87
hacer (264) 87 91
desde (265) 91
hasta (266) 91
clase (267) 9
hereda (268) 10
atributos (269) 12
metodos (270) 14
variables (271) 16
funcion (272) 45
lee (273) 98
escribe (274) 92
regresa (275) 104
n_void (276) 49
n_int (277) 33
n_float (278) 34
n_char (279) 35
asignador (280) 58 91
mas (281) 123
menos (282) 125
divi (283) 132
mult (284) 130
op_and (285) 114
op_or (286) 109
op_rel (287) 119
punto_coma (288) 3 9 21 45 58 69 92 98 104
dos_puntos (289) 21 51
coma (290) 29 31 53 64 78 94 101
punto (291) 59 73
l_paren (292) 3 45 69 72 81 87 92 98 104 135
r_paren (293) 3 45 69 72 81 87 92 98 104 135
l_brace (294) 3 9 45 81 83 87 91
r_brace (295) 3 9 45 81 83 87 91
l_bracket (296) 26 62
r_bracket (297) 26 62
cte_int (298) 26 29 140
cte_float (299) 141
cte_char (300) 142
cte_string (301) 96
id_ (302) 3 9 10 23 37 45 51 58 59 69 72 73 91 100 138


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
PROGRAMA (49)
    on left: 3, on right: 0
@1 (50)
    on left: 1, on right: 3
@2 (51)
    on left: 2, on right: 3
DECLARACIONES (52)
    on left: 4 5, on right: 3 4
DECLARACION (53)
    on left: 6 7 8, on right: 4
CLASE (54)
    on left: 9, on right: 6
HEREDA (55)
    on left: 10 11, on right: 9
ATRIBUTOS (56)
    on left: 12 13, on right: 9
METODOS (57)
    on left: 14 15, on right: 9
VARIABLES (58)
    on left: 16, on right: 7 46
VARS (59)
    on left: 17, on right: 12 16 18
VARS_ (60)
    on left: 18 19, on right: 17
VAR (61)
    on left: 21, on right: 17
@3 (62)
    on left: 20, on right: 21
VAR_IDS (63)
    on left: 23, on right: 21 31
@4 (64)
    on left: 22, on right: 23
ARR (65)
    on left: 26 27, on right: 23
@5 (66)
    on left: 24, on right: 26
@6 (67)
    on left: 25, on right: 26
ARR_ (68)
    on left: 29 30, on right: 26
@7 (69)
    on left: 28, on right: 29
VAR_IDS_ (70)
    on left: 31 32, on right: 23
TIPO_SIMPLE (71)
    on left: 33 34 35, on right: 36 48 51
TIPO_VAR (72)
    on left: 36 37, on right: 21
FUNCIONES (73)
    on left: 38, on right: 8 14 39
FUNCIONES_ (74)
    on left: 39 40, on right: 38
FUNCION (75)
    on left: 45, on right: 38
@8 (76)
    on left: 41, on right: 45
@9 (77)
    on left: 42, on right: 45
@10 (78)
    on left: 43, on right: 45
@11 (79)
    on left: 44, on right: 45
FUNC_VARIABLES (80)
    on left: 46 47, on right: 45
TIPO_RET (81)
    on left: 48 49, on right: 45
PARAMETROS (82)
    on left: 51 52, on right: 45 53
@12 (83)
    on left: 50, on right: 51
PARAMETROS_ (84)
    on left: 53 54, on right: 51
ASIGNACION (85)
    on left: 58, on right: 145
@13 (86)
    on left: 55, on right: 58
@14 (87)
    on left: 56, on right: 58
@15 (88)
    on left: 57, on right: 58
ASIG (89)
    on left: 59 62 63, on right: 58 138
@16 (90)
    on left: 60, on right: 62
@17 (91)
    on left: 61, on right: 62
ASIG_ (92)
    on left: 64 65, on right: 62
LLAMADA_VOID (93)
    on left: 69, on right: 146
@18 (94)
    on left: 66, on right: 69
@19 (95)
    on left: 67, on right: 69
@20 (96)
    on left: 68, on right: 69
LLAMADA_RET (97)
    on left: 72, on right: 139
@21 (98)
    on left: 70, on right: 72
@22 (99)
    on left: 71, on right: 72
FUNC_ (100)
    on left: 73 74, on right: 69 72
FUNC_PARAM (101)
    on left: 76 77, on right: 69 72 78
@23 (102)
    on left: 75, on right: 76
FUNC_PARAM_ (103)
    on left: 78 79, on right: 76
DECISION (104)
    on left: 81, on right: 149
@24 (105)
    on left: 80, on right: 81
DECISION_ (106)
    on left: 83 84, on right: 81
@25 (107)
    on left: 82, on right: 83
CONDICIONAL (108)
    on left: 87, on right: 150
@26 (109)
    on left: 85, on right: 87
@27 (110)
    on left: 86, on right: 87
NOCONDICIONAL (111)
    on left: 91, on right: 151
@28 (112)
    on left: 88, on right: 91
@29 (113)
    on left: 89, on right: 91
@30 (114)
    on left: 90, on right: 91
ESCRITURA (115)
    on left: 92, on right: 148
PRINTABLE (116)
    on left: 93, on right: 92 94
PRINTABLE_ (117)
    on left: 94 95, on right: 93
E (118)
    on left: 96 97, on right: 93
LECTURA (119)
    on left: 98, on right: 147
READABLE (120)
    on left: 100, on right: 98 101
@31 (121)
    on left: 99, on right: 100
READABLE_ (122)
    on left: 101 102, on right: 100
RETORNO (123)
    on left: 104, on right: 152
@32 (124)
    on left: 103, on right: 104
EXP (125)
    on left: 105, on right: 58 62 64 76 81 87 91 97 104 109
EXP_Q (126)
    on left: 107, on right: 105 135
@33 (127)
    on left: 106, on right: 107
EXP_ (128)
    on left: 109 110, on right: 107
@34 (129)
    on left: 108, on right: 109
T_EXP (130)
    on left: 112, on right: 107 114
@35 (131)
    on left: 111, on right: 112
T_EXP_ (132)
    on left: 114 115, on right: 112
@36 (133)
    on left: 113, on right: 114
G_EXP (134)
    on left: 116, on right: 112
G_EXP_ (135)
    on left: 117 118, on right: 116
OPER_REL (136)
    on left: 119, on right: 117
M_EXP (137)
    on left: 121, on right: 116 117 123 125
@37 (138)
    on left: 120, on right: 121
M_EXP_ (139)
    on left: 123 125 126, on right: 121
@38 (140)
    on left: 122, on right: 123
@39 (141)
    on left: 124, on right: 125
T (142)
    on left: 128, on right: 121 130 132
@40 (143)
    on left: 127, on right: 128
T_ (144)
    on left: 130 132 133, on right: 128
@41 (145)
    on left: 129, on right: 130
@42 (146)
    on left: 131, on right: 132
F (147)
    on left: 135 136 138 139, on right: 128
@43 (148)
    on left: 134, on right: 135
@44 (149)
    on left: 137, on right: 138
CTE (150)
    on left: 140 141 142, on right: 136
ESTATUTOS (151)
    on left: 143 144, on right: 3 45 81 83 87 91 143
ESTATUTO (152)
    on left: 145 146 147 148 149 150 151 152, on right: 143


state 0

    0 $accept: . PROGRAMA $end

    programa  shift, and go to state 1

    PROGRAMA  go to state 2


state 1

    3 PROGRAMA: programa . id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    id_  shift, and go to state 3


state 2

    0 $accept: PROGRAMA . $end

    $end  shift, and go to state 4


state 3

    3 PROGRAMA: programa id_ . @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    $default  reduce using rule 1 (@1)

    @1  go to state 5


state 4

    0 $accept: PROGRAMA $end .

    $default  accept


state 5

    3 PROGRAMA: programa id_ @1 . punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    punto_coma  shift, and go to state 6


state 6

    3 PROGRAMA: programa id_ @1 punto_coma . DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    clase      shift, and go to state 7
    variables  shift, and go to state 8
    funcion    shift, and go to state 9

    $default  reduce using rule 5 (DECLARACIONES)

    DECLARACIONES  go to state 10
    DECLARACION    go to state 11
    CLASE          go to state 12
    VARIABLES      go to state 13
    FUNCIONES      go to state 14
    FUNCION        go to state 15


state 7

    9 CLASE: clase . id_ HEREDA punto_coma l_brace ATRIBUTOS METODOS r_brace punto_coma

    id_  shift, and go to state 16


state 8

   16 VARIABLES: variables . VARS

    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19
    id_      shift, and go to state 20

    VARS         go to state 21
    VAR          go to state 22
    TIPO_SIMPLE  go to state 23
    TIPO_VAR     go to state 24


state 9

   45 FUNCION: funcion . TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    n_void   shift, and go to state 25
    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19

    TIPO_SIMPLE  go to state 26
    TIPO_RET     go to state 27


state 10

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES . principal l_paren r_paren @2 l_brace ESTATUTOS r_brace

    principal  shift, and go to state 28


state 11

    4 DECLARACIONES: DECLARACION . DECLARACIONES

    clase      shift, and go to state 7
    variables  shift, and go to state 8
    funcion    shift, and go to state 9

    $default  reduce using rule 5 (DECLARACIONES)

    DECLARACIONES  go to state 29
    DECLARACION    go to state 11
    CLASE          go to state 12
    VARIABLES      go to state 13
    FUNCIONES      go to state 14
    FUNCION        go to state 15


state 12

    6 DECLARACION: CLASE .

    $default  reduce using rule 6 (DECLARACION)


state 13

    7 DECLARACION: VARIABLES .

    $default  reduce using rule 7 (DECLARACION)


state 14

    8 DECLARACION: FUNCIONES .

    $default  reduce using rule 8 (DECLARACION)


state 15

   38 FUNCIONES: FUNCION . FUNCIONES_

    funcion  shift, and go to state 9

    funcion   [reduce using rule 40 (FUNCIONES_)]
    $default  reduce using rule 40 (FUNCIONES_)

    FUNCIONES   go to state 30
    FUNCIONES_  go to state 31
    FUNCION     go to state 15


state 16

    9 CLASE: clase id_ . HEREDA punto_coma l_brace ATRIBUTOS METODOS r_brace punto_coma

    hereda  shift, and go to state 32

    $default  reduce using rule 11 (HEREDA)

    HEREDA  go to state 33


state 17

   33 TIPO_SIMPLE: n_int .

    $default  reduce using rule 33 (TIPO_SIMPLE)


state 18

   34 TIPO_SIMPLE: n_float .

    $default  reduce using rule 34 (TIPO_SIMPLE)


state 19

   35 TIPO_SIMPLE: n_char .

    $default  reduce using rule 35 (TIPO_SIMPLE)


state 20

   37 TIPO_VAR: id_ .

    $default  reduce using rule 37 (TIPO_VAR)


state 21

   16 VARIABLES: variables VARS .

    $default  reduce using rule 16 (VARIABLES)


state 22

   17 VARS: VAR . VARS_

    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19
    id_      shift, and go to state 20

    $default  reduce using rule 19 (VARS_)

    VARS         go to state 34
    VARS_        go to state 35
    VAR          go to state 22
    TIPO_SIMPLE  go to state 23
    TIPO_VAR     go to state 24


state 23

   36 TIPO_VAR: TIPO_SIMPLE .

    $default  reduce using rule 36 (TIPO_VAR)


state 24

   21 VAR: TIPO_VAR . @3 dos_puntos VAR_IDS punto_coma

    $default  reduce using rule 20 (@3)

    @3  go to state 36


state 25

   49 TIPO_RET: n_void .

    $default  reduce using rule 49 (TIPO_RET)


state 26

   48 TIPO_RET: TIPO_SIMPLE .

    $default  reduce using rule 48 (TIPO_RET)


state 27

   45 FUNCION: funcion TIPO_RET . id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    id_  shift, and go to state 37


state 28

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal . l_paren r_paren @2 l_brace ESTATUTOS r_brace

    l_paren  shift, and go to state 38


state 29

    4 DECLARACIONES: DECLARACION DECLARACIONES .

    $default  reduce using rule 4 (DECLARACIONES)


state 30

   39 FUNCIONES_: FUNCIONES .

    $default  reduce using rule 39 (FUNCIONES_)


state 31

   38 FUNCIONES: FUNCION FUNCIONES_ .

    $default  reduce using rule 38 (FUNCIONES)


state 32

   10 HEREDA: hereda . id_

    id_  shift, and go to state 39


state 33

    9 CLASE: clase id_ HEREDA . punto_coma l_brace ATRIBUTOS METODOS r_brace punto_coma

    punto_coma  shift, and go to state 40


state 34

   18 VARS_: VARS .

    $default  reduce using rule 18 (VARS_)


state 35

   17 VARS: VAR VARS_ .

    $default  reduce using rule 17 (VARS)


state 36

   21 VAR: TIPO_VAR @3 . dos_puntos VAR_IDS punto_coma

    dos_puntos  shift, and go to state 41


state 37

   45 FUNCION: funcion TIPO_RET id_ . @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    $default  reduce using rule 41 (@8)

    @8  go to state 42


state 38

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren . r_paren @2 l_brace ESTATUTOS r_brace

    r_paren  shift, and go to state 43


state 39

   10 HEREDA: hereda id_ .

    $default  reduce using rule 10 (HEREDA)


state 40

    9 CLASE: clase id_ HEREDA punto_coma . l_brace ATRIBUTOS METODOS r_brace punto_coma

    l_brace  shift, and go to state 44


state 41

   21 VAR: TIPO_VAR @3 dos_puntos . VAR_IDS punto_coma

    id_  shift, and go to state 45

    VAR_IDS  go to state 46


state 42

   45 FUNCION: funcion TIPO_RET id_ @8 . l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    l_paren  shift, and go to state 47


state 43

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren . @2 l_brace ESTATUTOS r_brace

    $default  reduce using rule 2 (@2)

    @2  go to state 48


state 44

    9 CLASE: clase id_ HEREDA punto_coma l_brace . ATRIBUTOS METODOS r_brace punto_coma

    atributos  shift, and go to state 49

    $default  reduce using rule 13 (ATRIBUTOS)

    ATRIBUTOS  go to state 50


state 45

   23 VAR_IDS: id_ . @4 ARR VAR_IDS_

    $default  reduce using rule 22 (@4)

    @4  go to state 51


state 46

   21 VAR: TIPO_VAR @3 dos_puntos VAR_IDS . punto_coma

    punto_coma  shift, and go to state 52


state 47

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren . @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    $default  reduce using rule 42 (@9)

    @9  go to state 53


state 48

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 . l_brace ESTATUTOS r_brace

    l_brace  shift, and go to state 54


state 49

   12 ATRIBUTOS: atributos . VARS

    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19
    id_      shift, and go to state 20

    VARS         go to state 55
    VAR          go to state 22
    TIPO_SIMPLE  go to state 23
    TIPO_VAR     go to state 24


state 50

    9 CLASE: clase id_ HEREDA punto_coma l_brace ATRIBUTOS . METODOS r_brace punto_coma

    metodos  shift, and go to state 56

    $default  reduce using rule 15 (METODOS)

    METODOS  go to state 57


state 51

   23 VAR_IDS: id_ @4 . ARR VAR_IDS_

    l_bracket  shift, and go to state 58

    $default  reduce using rule 27 (ARR)

    ARR  go to state 59


state 52

   21 VAR: TIPO_VAR @3 dos_puntos VAR_IDS punto_coma .

    $default  reduce using rule 21 (VAR)


state 53

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 . PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19

    $default  reduce using rule 52 (PARAMETROS)

    TIPO_SIMPLE  go to state 60
    PARAMETROS   go to state 61


state 54

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace . ESTATUTOS r_brace

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 77
    ESTATUTO       go to state 78


state 55

   12 ATRIBUTOS: atributos VARS .

    $default  reduce using rule 12 (ATRIBUTOS)


state 56

   14 METODOS: metodos . FUNCIONES

    funcion  shift, and go to state 9

    FUNCIONES  go to state 79
    FUNCION    go to state 15


state 57

    9 CLASE: clase id_ HEREDA punto_coma l_brace ATRIBUTOS METODOS . r_brace punto_coma

    r_brace  shift, and go to state 80


state 58

   26 ARR: l_bracket . @5 cte_int @6 ARR_ r_bracket

    $default  reduce using rule 24 (@5)

    @5  go to state 81


state 59

   23 VAR_IDS: id_ @4 ARR . VAR_IDS_

    coma  shift, and go to state 82

    $default  reduce using rule 32 (VAR_IDS_)

    VAR_IDS_  go to state 83


state 60

   51 PARAMETROS: TIPO_SIMPLE . dos_puntos id_ @12 PARAMETROS_

    dos_puntos  shift, and go to state 84


state 61

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS . @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    $default  reduce using rule 43 (@10)

    @10  go to state 85


state 62

   81 DECISION: si . l_paren EXP r_paren @24 entonces l_brace ESTATUTOS r_brace DECISION_

    l_paren  shift, and go to state 86


state 63

   87 CONDICIONAL: mientras . @26 l_paren EXP r_paren @27 hacer l_brace ESTATUTOS r_brace

    $default  reduce using rule 85 (@26)

    @26  go to state 87


state 64

   91 NOCONDICIONAL: desde . id_ asignador EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    id_  shift, and go to state 88


state 65

   98 LECTURA: lee . l_paren READABLE r_paren punto_coma

    l_paren  shift, and go to state 89


state 66

   92 ESCRITURA: escribe . l_paren PRINTABLE r_paren punto_coma

    l_paren  shift, and go to state 90


state 67

  104 RETORNO: regresa . l_paren EXP r_paren @32 punto_coma

    l_paren  shift, and go to state 91


state 68

   58 ASIGNACION: id_ . @13 ASIG asignador @14 EXP @15 punto_coma
   69 LLAMADA_VOID: id_ . @18 FUNC_ l_paren @19 FUNC_PARAM r_paren @20 punto_coma

    punto     reduce using rule 55 (@13)
    punto     [reduce using rule 66 (@18)]
    l_paren   reduce using rule 66 (@18)
    $default  reduce using rule 55 (@13)

    @13  go to state 92
    @18  go to state 93


state 69

  145 ESTATUTO: ASIGNACION .

    $default  reduce using rule 145 (ESTATUTO)


state 70

  146 ESTATUTO: LLAMADA_VOID .

    $default  reduce using rule 146 (ESTATUTO)


state 71

  149 ESTATUTO: DECISION .

    $default  reduce using rule 149 (ESTATUTO)


state 72

  150 ESTATUTO: CONDICIONAL .

    $default  reduce using rule 150 (ESTATUTO)


state 73

  151 ESTATUTO: NOCONDICIONAL .

    $default  reduce using rule 151 (ESTATUTO)


state 74

  148 ESTATUTO: ESCRITURA .

    $default  reduce using rule 148 (ESTATUTO)


state 75

  147 ESTATUTO: LECTURA .

    $default  reduce using rule 147 (ESTATUTO)


state 76

  152 ESTATUTO: RETORNO .

    $default  reduce using rule 152 (ESTATUTO)


state 77

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS . r_brace

    r_brace  shift, and go to state 94


state 78

  143 ESTATUTOS: ESTATUTO . ESTATUTOS

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 95
    ESTATUTO       go to state 78


state 79

   14 METODOS: metodos FUNCIONES .

    $default  reduce using rule 14 (METODOS)


state 80

    9 CLASE: clase id_ HEREDA punto_coma l_brace ATRIBUTOS METODOS r_brace . punto_coma

    punto_coma  shift, and go to state 96


state 81

   26 ARR: l_bracket @5 . cte_int @6 ARR_ r_bracket

    cte_int  shift, and go to state 97


state 82

   31 VAR_IDS_: coma . VAR_IDS

    id_  shift, and go to state 45

    VAR_IDS  go to state 98


state 83

   23 VAR_IDS: id_ @4 ARR VAR_IDS_ .

    $default  reduce using rule 23 (VAR_IDS)


state 84

   51 PARAMETROS: TIPO_SIMPLE dos_puntos . id_ @12 PARAMETROS_

    id_  shift, and go to state 99


state 85

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 . r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    r_paren  shift, and go to state 100


state 86

   81 DECISION: si l_paren . EXP r_paren @24 entonces l_brace ESTATUTOS r_brace DECISION_

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 107
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 87

   87 CONDICIONAL: mientras @26 . l_paren EXP r_paren @27 hacer l_brace ESTATUTOS r_brace

    l_paren  shift, and go to state 115


state 88

   91 NOCONDICIONAL: desde id_ . asignador EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    asignador  shift, and go to state 116


state 89

   98 LECTURA: lee l_paren . READABLE r_paren punto_coma

    id_  shift, and go to state 117

    READABLE  go to state 118


state 90

   92 ESCRITURA: escribe l_paren . PRINTABLE r_paren punto_coma

    l_paren     shift, and go to state 101
    cte_int     shift, and go to state 102
    cte_float   shift, and go to state 103
    cte_char    shift, and go to state 104
    cte_string  shift, and go to state 119
    id_         shift, and go to state 105

    LLAMADA_RET  go to state 106
    PRINTABLE    go to state 120
    E            go to state 121
    EXP          go to state 122
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 91

  104 RETORNO: regresa l_paren . EXP r_paren @32 punto_coma

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 123
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 92

   58 ASIGNACION: id_ @13 . ASIG asignador @14 EXP @15 punto_coma

    punto      shift, and go to state 124
    l_bracket  shift, and go to state 125

    $default  reduce using rule 63 (ASIG)

    ASIG  go to state 126


state 93

   69 LLAMADA_VOID: id_ @18 . FUNC_ l_paren @19 FUNC_PARAM r_paren @20 punto_coma

    punto  shift, and go to state 127

    $default  reduce using rule 74 (FUNC_)

    FUNC_  go to state 128


state 94

    3 PROGRAMA: programa id_ @1 punto_coma DECLARACIONES principal l_paren r_paren @2 l_brace ESTATUTOS r_brace .

    $default  reduce using rule 3 (PROGRAMA)


state 95

  143 ESTATUTOS: ESTATUTO ESTATUTOS .

    $default  reduce using rule 143 (ESTATUTOS)


state 96

    9 CLASE: clase id_ HEREDA punto_coma l_brace ATRIBUTOS METODOS r_brace punto_coma .

    $default  reduce using rule 9 (CLASE)


state 97

   26 ARR: l_bracket @5 cte_int . @6 ARR_ r_bracket

    $default  reduce using rule 25 (@6)

    @6  go to state 129


state 98

   31 VAR_IDS_: coma VAR_IDS .

    $default  reduce using rule 31 (VAR_IDS_)


state 99

   51 PARAMETROS: TIPO_SIMPLE dos_puntos id_ . @12 PARAMETROS_

    $default  reduce using rule 50 (@12)

    @12  go to state 130


state 100

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren . punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    punto_coma  shift, and go to state 131


state 101

  135 F: l_paren . @43 EXP_Q r_paren

    $default  reduce using rule 134 (@43)

    @43  go to state 132


state 102

  140 CTE: cte_int .

    $default  reduce using rule 140 (CTE)


state 103

  141 CTE: cte_float .

    $default  reduce using rule 141 (CTE)


state 104

  142 CTE: cte_char .

    $default  reduce using rule 142 (CTE)


state 105

   72 LLAMADA_RET: id_ . @21 FUNC_ l_paren @22 FUNC_PARAM r_paren
  138 F: id_ . @44 ASIG

    punto     reduce using rule 70 (@21)
    punto     [reduce using rule 137 (@44)]
    l_paren   reduce using rule 70 (@21)
    $default  reduce using rule 137 (@44)

    @21  go to state 133
    @44  go to state 134


state 106

  139 F: LLAMADA_RET .

    $default  reduce using rule 139 (F)


state 107

   81 DECISION: si l_paren EXP . r_paren @24 entonces l_brace ESTATUTOS r_brace DECISION_

    r_paren  shift, and go to state 135


state 108

  105 EXP: EXP_Q .

    $default  reduce using rule 105 (EXP)


state 109

  107 EXP_Q: T_EXP . @33 EXP_

    $default  reduce using rule 106 (@33)

    @33  go to state 136


state 110

  112 T_EXP: G_EXP . @35 T_EXP_

    $default  reduce using rule 111 (@35)

    @35  go to state 137


state 111

  116 G_EXP: M_EXP . G_EXP_

    op_rel  shift, and go to state 138

    $default  reduce using rule 118 (G_EXP_)

    G_EXP_    go to state 139
    OPER_REL  go to state 140


state 112

  121 M_EXP: T . @37 M_EXP_

    $default  reduce using rule 120 (@37)

    @37  go to state 141


state 113

  128 T: F . @40 T_

    $default  reduce using rule 127 (@40)

    @40  go to state 142


state 114

  136 F: CTE .

    $default  reduce using rule 136 (F)


state 115

   87 CONDICIONAL: mientras @26 l_paren . EXP r_paren @27 hacer l_brace ESTATUTOS r_brace

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 143
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 116

   91 NOCONDICIONAL: desde id_ asignador . EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 144
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 117

  100 READABLE: id_ . @31 READABLE_

    $default  reduce using rule 99 (@31)

    @31  go to state 145


state 118

   98 LECTURA: lee l_paren READABLE . r_paren punto_coma

    r_paren  shift, and go to state 146


state 119

   96 E: cte_string .

    $default  reduce using rule 96 (E)


state 120

   92 ESCRITURA: escribe l_paren PRINTABLE . r_paren punto_coma

    r_paren  shift, and go to state 147


state 121

   93 PRINTABLE: E . PRINTABLE_

    coma  shift, and go to state 148

    $default  reduce using rule 95 (PRINTABLE_)

    PRINTABLE_  go to state 149


state 122

   97 E: EXP .

    $default  reduce using rule 97 (E)


state 123

  104 RETORNO: regresa l_paren EXP . r_paren @32 punto_coma

    r_paren  shift, and go to state 150


state 124

   59 ASIG: punto . id_

    id_  shift, and go to state 151


state 125

   62 ASIG: l_bracket . @16 EXP @17 ASIG_ r_bracket

    $default  reduce using rule 60 (@16)

    @16  go to state 152


state 126

   58 ASIGNACION: id_ @13 ASIG . asignador @14 EXP @15 punto_coma

    asignador  shift, and go to state 153


state 127

   73 FUNC_: punto . id_

    id_  shift, and go to state 154


state 128

   69 LLAMADA_VOID: id_ @18 FUNC_ . l_paren @19 FUNC_PARAM r_paren @20 punto_coma

    l_paren  shift, and go to state 155


state 129

   26 ARR: l_bracket @5 cte_int @6 . ARR_ r_bracket

    coma  shift, and go to state 156

    $default  reduce using rule 30 (ARR_)

    ARR_  go to state 157


state 130

   51 PARAMETROS: TIPO_SIMPLE dos_puntos id_ @12 . PARAMETROS_

    coma  shift, and go to state 158

    $default  reduce using rule 54 (PARAMETROS_)

    PARAMETROS_  go to state 159


state 131

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma . FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace

    variables  shift, and go to state 8

    $default  reduce using rule 47 (FUNC_VARIABLES)

    VARIABLES       go to state 160
    FUNC_VARIABLES  go to state 161


state 132

  135 F: l_paren @43 . EXP_Q r_paren

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP_Q        go to state 162
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 133

   72 LLAMADA_RET: id_ @21 . FUNC_ l_paren @22 FUNC_PARAM r_paren

    punto  shift, and go to state 127

    $default  reduce using rule 74 (FUNC_)

    FUNC_  go to state 163


state 134

  138 F: id_ @44 . ASIG

    punto      shift, and go to state 124
    l_bracket  shift, and go to state 125

    $default  reduce using rule 63 (ASIG)

    ASIG  go to state 164


state 135

   81 DECISION: si l_paren EXP r_paren . @24 entonces l_brace ESTATUTOS r_brace DECISION_

    $default  reduce using rule 80 (@24)

    @24  go to state 165


state 136

  107 EXP_Q: T_EXP @33 . EXP_

    op_or  shift, and go to state 166

    $default  reduce using rule 110 (EXP_)

    EXP_  go to state 167


state 137

  112 T_EXP: G_EXP @35 . T_EXP_

    op_and  shift, and go to state 168

    $default  reduce using rule 115 (T_EXP_)

    T_EXP_  go to state 169


state 138

  119 OPER_REL: op_rel .

    $default  reduce using rule 119 (OPER_REL)


state 139

  116 G_EXP: M_EXP G_EXP_ .

    $default  reduce using rule 116 (G_EXP)


state 140

  117 G_EXP_: OPER_REL . M_EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    M_EXP        go to state 170
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 141

  121 M_EXP: T @37 . M_EXP_

    mas    shift, and go to state 171
    menos  shift, and go to state 172

    $default  reduce using rule 126 (M_EXP_)

    M_EXP_  go to state 173


state 142

  128 T: F @40 . T_

    divi  shift, and go to state 174
    mult  shift, and go to state 175

    $default  reduce using rule 133 (T_)

    T_  go to state 176


state 143

   87 CONDICIONAL: mientras @26 l_paren EXP . r_paren @27 hacer l_brace ESTATUTOS r_brace

    r_paren  shift, and go to state 177


state 144

   91 NOCONDICIONAL: desde id_ asignador EXP . @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    $default  reduce using rule 88 (@28)

    @28  go to state 178


state 145

  100 READABLE: id_ @31 . READABLE_

    coma  shift, and go to state 179

    $default  reduce using rule 102 (READABLE_)

    READABLE_  go to state 180


state 146

   98 LECTURA: lee l_paren READABLE r_paren . punto_coma

    punto_coma  shift, and go to state 181


state 147

   92 ESCRITURA: escribe l_paren PRINTABLE r_paren . punto_coma

    punto_coma  shift, and go to state 182


state 148

   94 PRINTABLE_: coma . PRINTABLE

    l_paren     shift, and go to state 101
    cte_int     shift, and go to state 102
    cte_float   shift, and go to state 103
    cte_char    shift, and go to state 104
    cte_string  shift, and go to state 119
    id_         shift, and go to state 105

    LLAMADA_RET  go to state 106
    PRINTABLE    go to state 183
    E            go to state 121
    EXP          go to state 122
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 149

   93 PRINTABLE: E PRINTABLE_ .

    $default  reduce using rule 93 (PRINTABLE)


state 150

  104 RETORNO: regresa l_paren EXP r_paren . @32 punto_coma

    $default  reduce using rule 103 (@32)

    @32  go to state 184


state 151

   59 ASIG: punto id_ .

    $default  reduce using rule 59 (ASIG)


state 152

   62 ASIG: l_bracket @16 . EXP @17 ASIG_ r_bracket

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 185
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 153

   58 ASIGNACION: id_ @13 ASIG asignador . @14 EXP @15 punto_coma

    $default  reduce using rule 56 (@14)

    @14  go to state 186


state 154

   73 FUNC_: punto id_ .

    $default  reduce using rule 73 (FUNC_)


state 155

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren . @19 FUNC_PARAM r_paren @20 punto_coma

    $default  reduce using rule 67 (@19)

    @19  go to state 187


state 156

   29 ARR_: coma . @7 cte_int

    $default  reduce using rule 28 (@7)

    @7  go to state 188


state 157

   26 ARR: l_bracket @5 cte_int @6 ARR_ . r_bracket

    r_bracket  shift, and go to state 189


state 158

   53 PARAMETROS_: coma . PARAMETROS

    n_int    shift, and go to state 17
    n_float  shift, and go to state 18
    n_char   shift, and go to state 19

    $default  reduce using rule 52 (PARAMETROS)

    TIPO_SIMPLE  go to state 60
    PARAMETROS   go to state 190


state 159

   51 PARAMETROS: TIPO_SIMPLE dos_puntos id_ @12 PARAMETROS_ .

    $default  reduce using rule 51 (PARAMETROS)


state 160

   46 FUNC_VARIABLES: VARIABLES .

    $default  reduce using rule 46 (FUNC_VARIABLES)


state 161

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES . @11 l_brace ESTATUTOS r_brace

    $default  reduce using rule 44 (@11)

    @11  go to state 191


state 162

  135 F: l_paren @43 EXP_Q . r_paren

    r_paren  shift, and go to state 192


state 163

   72 LLAMADA_RET: id_ @21 FUNC_ . l_paren @22 FUNC_PARAM r_paren

    l_paren  shift, and go to state 193


state 164

  138 F: id_ @44 ASIG .

    $default  reduce using rule 138 (F)


state 165

   81 DECISION: si l_paren EXP r_paren @24 . entonces l_brace ESTATUTOS r_brace DECISION_

    entonces  shift, and go to state 194


state 166

  109 EXP_: op_or . @34 EXP

    $default  reduce using rule 108 (@34)

    @34  go to state 195


state 167

  107 EXP_Q: T_EXP @33 EXP_ .

    $default  reduce using rule 107 (EXP_Q)


state 168

  114 T_EXP_: op_and . @36 T_EXP

    $default  reduce using rule 113 (@36)

    @36  go to state 196


state 169

  112 T_EXP: G_EXP @35 T_EXP_ .

    $default  reduce using rule 112 (T_EXP)


state 170

  117 G_EXP_: OPER_REL M_EXP .

    $default  reduce using rule 117 (G_EXP_)


state 171

  123 M_EXP_: mas . @38 M_EXP

    $default  reduce using rule 122 (@38)

    @38  go to state 197


state 172

  125 M_EXP_: menos . @39 M_EXP

    $default  reduce using rule 124 (@39)

    @39  go to state 198


state 173

  121 M_EXP: T @37 M_EXP_ .

    $default  reduce using rule 121 (M_EXP)


state 174

  132 T_: divi . @42 T

    $default  reduce using rule 131 (@42)

    @42  go to state 199


state 175

  130 T_: mult . @41 T

    $default  reduce using rule 129 (@41)

    @41  go to state 200


state 176

  128 T: F @40 T_ .

    $default  reduce using rule 128 (T)


state 177

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren . @27 hacer l_brace ESTATUTOS r_brace

    $default  reduce using rule 86 (@27)

    @27  go to state 201


state 178

   91 NOCONDICIONAL: desde id_ asignador EXP @28 . hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    hasta  shift, and go to state 202


state 179

  101 READABLE_: coma . READABLE

    id_  shift, and go to state 117

    READABLE  go to state 203


state 180

  100 READABLE: id_ @31 READABLE_ .

    $default  reduce using rule 100 (READABLE)


state 181

   98 LECTURA: lee l_paren READABLE r_paren punto_coma .

    $default  reduce using rule 98 (LECTURA)


state 182

   92 ESCRITURA: escribe l_paren PRINTABLE r_paren punto_coma .

    $default  reduce using rule 92 (ESCRITURA)


state 183

   94 PRINTABLE_: coma PRINTABLE .

    $default  reduce using rule 94 (PRINTABLE_)


state 184

  104 RETORNO: regresa l_paren EXP r_paren @32 . punto_coma

    punto_coma  shift, and go to state 204


state 185

   62 ASIG: l_bracket @16 EXP . @17 ASIG_ r_bracket

    $default  reduce using rule 61 (@17)

    @17  go to state 205


state 186

   58 ASIGNACION: id_ @13 ASIG asignador @14 . EXP @15 punto_coma

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 206
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 187

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 . FUNC_PARAM r_paren @20 punto_coma

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    $default  reduce using rule 77 (FUNC_PARAM)

    LLAMADA_RET  go to state 106
    FUNC_PARAM   go to state 207
    EXP          go to state 208
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 188

   29 ARR_: coma @7 . cte_int

    cte_int  shift, and go to state 209


state 189

   26 ARR: l_bracket @5 cte_int @6 ARR_ r_bracket .

    $default  reduce using rule 26 (ARR)


state 190

   53 PARAMETROS_: coma PARAMETROS .

    $default  reduce using rule 53 (PARAMETROS_)


state 191

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 . l_brace ESTATUTOS r_brace

    l_brace  shift, and go to state 210


state 192

  135 F: l_paren @43 EXP_Q r_paren .

    $default  reduce using rule 135 (F)


state 193

   72 LLAMADA_RET: id_ @21 FUNC_ l_paren . @22 FUNC_PARAM r_paren

    $default  reduce using rule 71 (@22)

    @22  go to state 211


state 194

   81 DECISION: si l_paren EXP r_paren @24 entonces . l_brace ESTATUTOS r_brace DECISION_

    l_brace  shift, and go to state 212


state 195

  109 EXP_: op_or @34 . EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 213
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 196

  114 T_EXP_: op_and @36 . T_EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    T_EXP        go to state 214
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 197

  123 M_EXP_: mas @38 . M_EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    M_EXP        go to state 215
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 198

  125 M_EXP_: menos @39 . M_EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    M_EXP        go to state 216
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 199

  132 T_: divi @42 . T

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    T            go to state 217
    F            go to state 113
    CTE          go to state 114


state 200

  130 T_: mult @41 . T

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    T            go to state 218
    F            go to state 113
    CTE          go to state 114


state 201

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 . hacer l_brace ESTATUTOS r_brace

    hacer  shift, and go to state 219


state 202

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta . EXP @29 hacer @30 l_brace ESTATUTOS r_brace

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 220
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 203

  101 READABLE_: coma READABLE .

    $default  reduce using rule 101 (READABLE_)


state 204

  104 RETORNO: regresa l_paren EXP r_paren @32 punto_coma .

    $default  reduce using rule 104 (RETORNO)


state 205

   62 ASIG: l_bracket @16 EXP @17 . ASIG_ r_bracket

    coma  shift, and go to state 221

    $default  reduce using rule 65 (ASIG_)

    ASIG_  go to state 222


state 206

   58 ASIGNACION: id_ @13 ASIG asignador @14 EXP . @15 punto_coma

    $default  reduce using rule 57 (@15)

    @15  go to state 223


state 207

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 FUNC_PARAM . r_paren @20 punto_coma

    r_paren  shift, and go to state 224


state 208

   76 FUNC_PARAM: EXP . @23 FUNC_PARAM_

    $default  reduce using rule 75 (@23)

    @23  go to state 225


state 209

   29 ARR_: coma @7 cte_int .

    $default  reduce using rule 29 (ARR_)


state 210

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace . ESTATUTOS r_brace

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 226
    ESTATUTO       go to state 78


state 211

   72 LLAMADA_RET: id_ @21 FUNC_ l_paren @22 . FUNC_PARAM r_paren

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    $default  reduce using rule 77 (FUNC_PARAM)

    LLAMADA_RET  go to state 106
    FUNC_PARAM   go to state 227
    EXP          go to state 208
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 212

   81 DECISION: si l_paren EXP r_paren @24 entonces l_brace . ESTATUTOS r_brace DECISION_

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 228
    ESTATUTO       go to state 78


state 213

  109 EXP_: op_or @34 EXP .

    $default  reduce using rule 109 (EXP_)


state 214

  114 T_EXP_: op_and @36 T_EXP .

    $default  reduce using rule 114 (T_EXP_)


state 215

  123 M_EXP_: mas @38 M_EXP .

    $default  reduce using rule 123 (M_EXP_)


state 216

  125 M_EXP_: menos @39 M_EXP .

    $default  reduce using rule 125 (M_EXP_)


state 217

  132 T_: divi @42 T .

    $default  reduce using rule 132 (T_)


state 218

  130 T_: mult @41 T .

    $default  reduce using rule 130 (T_)


state 219

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 hacer . l_brace ESTATUTOS r_brace

    l_brace  shift, and go to state 229


state 220

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP . @29 hacer @30 l_brace ESTATUTOS r_brace

    $default  reduce using rule 89 (@29)

    @29  go to state 230


state 221

   64 ASIG_: coma . EXP

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    LLAMADA_RET  go to state 106
    EXP          go to state 231
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 222

   62 ASIG: l_bracket @16 EXP @17 ASIG_ . r_bracket

    r_bracket  shift, and go to state 232


state 223

   58 ASIGNACION: id_ @13 ASIG asignador @14 EXP @15 . punto_coma

    punto_coma  shift, and go to state 233


state 224

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 FUNC_PARAM r_paren . @20 punto_coma

    $default  reduce using rule 68 (@20)

    @20  go to state 234


state 225

   76 FUNC_PARAM: EXP @23 . FUNC_PARAM_

    coma  shift, and go to state 235

    $default  reduce using rule 79 (FUNC_PARAM_)

    FUNC_PARAM_  go to state 236


state 226

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS . r_brace

    r_brace  shift, and go to state 237


state 227

   72 LLAMADA_RET: id_ @21 FUNC_ l_paren @22 FUNC_PARAM . r_paren

    r_paren  shift, and go to state 238


state 228

   81 DECISION: si l_paren EXP r_paren @24 entonces l_brace ESTATUTOS . r_brace DECISION_

    r_brace  shift, and go to state 239


state 229

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 hacer l_brace . ESTATUTOS r_brace

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 240
    ESTATUTO       go to state 78


state 230

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 . hacer @30 l_brace ESTATUTOS r_brace

    hacer  shift, and go to state 241


state 231

   64 ASIG_: coma EXP .

    $default  reduce using rule 64 (ASIG_)


state 232

   62 ASIG: l_bracket @16 EXP @17 ASIG_ r_bracket .

    $default  reduce using rule 62 (ASIG)


state 233

   58 ASIGNACION: id_ @13 ASIG asignador @14 EXP @15 punto_coma .

    $default  reduce using rule 58 (ASIGNACION)


state 234

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 FUNC_PARAM r_paren @20 . punto_coma

    punto_coma  shift, and go to state 242


state 235

   78 FUNC_PARAM_: coma . FUNC_PARAM

    l_paren    shift, and go to state 101
    cte_int    shift, and go to state 102
    cte_float  shift, and go to state 103
    cte_char   shift, and go to state 104
    id_        shift, and go to state 105

    $default  reduce using rule 77 (FUNC_PARAM)

    LLAMADA_RET  go to state 106
    FUNC_PARAM   go to state 243
    EXP          go to state 208
    EXP_Q        go to state 108
    T_EXP        go to state 109
    G_EXP        go to state 110
    M_EXP        go to state 111
    T            go to state 112
    F            go to state 113
    CTE          go to state 114


state 236

   76 FUNC_PARAM: EXP @23 FUNC_PARAM_ .

    $default  reduce using rule 76 (FUNC_PARAM)


state 237

   45 FUNCION: funcion TIPO_RET id_ @8 l_paren @9 PARAMETROS @10 r_paren punto_coma FUNC_VARIABLES @11 l_brace ESTATUTOS r_brace .

    $default  reduce using rule 45 (FUNCION)


state 238

   72 LLAMADA_RET: id_ @21 FUNC_ l_paren @22 FUNC_PARAM r_paren .

    $default  reduce using rule 72 (LLAMADA_RET)


state 239

   81 DECISION: si l_paren EXP r_paren @24 entonces l_brace ESTATUTOS r_brace . DECISION_

    sino  shift, and go to state 244

    $default  reduce using rule 84 (DECISION_)

    DECISION_  go to state 245


state 240

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 hacer l_brace ESTATUTOS . r_brace

    r_brace  shift, and go to state 246


state 241

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer . @30 l_brace ESTATUTOS r_brace

    $default  reduce using rule 90 (@30)

    @30  go to state 247


state 242

   69 LLAMADA_VOID: id_ @18 FUNC_ l_paren @19 FUNC_PARAM r_paren @20 punto_coma .

    $default  reduce using rule 69 (LLAMADA_VOID)


state 243

   78 FUNC_PARAM_: coma FUNC_PARAM .

    $default  reduce using rule 78 (FUNC_PARAM_)


state 244

   83 DECISION_: sino . @25 l_brace ESTATUTOS r_brace

    $default  reduce using rule 82 (@25)

    @25  go to state 248


state 245

   81 DECISION: si l_paren EXP r_paren @24 entonces l_brace ESTATUTOS r_brace DECISION_ .

    $default  reduce using rule 81 (DECISION)


state 246

   87 CONDICIONAL: mientras @26 l_paren EXP r_paren @27 hacer l_brace ESTATUTOS r_brace .

    $default  reduce using rule 87 (CONDICIONAL)


state 247

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer @30 . l_brace ESTATUTOS r_brace

    l_brace  shift, and go to state 249


state 248

   83 DECISION_: sino @25 . l_brace ESTATUTOS r_brace

    l_brace  shift, and go to state 250


state 249

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer @30 l_brace . ESTATUTOS r_brace

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 251
    ESTATUTO       go to state 78


state 250

   83 DECISION_: sino @25 l_brace . ESTATUTOS r_brace

    si        shift, and go to state 62
    mientras  shift, and go to state 63
    desde     shift, and go to state 64
    lee       shift, and go to state 65
    escribe   shift, and go to state 66
    regresa   shift, and go to state 67
    id_       shift, and go to state 68

    $default  reduce using rule 144 (ESTATUTOS)

    ASIGNACION     go to state 69
    LLAMADA_VOID   go to state 70
    DECISION       go to state 71
    CONDICIONAL    go to state 72
    NOCONDICIONAL  go to state 73
    ESCRITURA      go to state 74
    LECTURA        go to state 75
    RETORNO        go to state 76
    ESTATUTOS      go to state 252
    ESTATUTO       go to state 78


state 251

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS . r_brace

    r_brace  shift, and go to state 253


state 252

   83 DECISION_: sino @25 l_brace ESTATUTOS . r_brace

    r_brace  shift, and go to state 254


state 253

   91 NOCONDICIONAL: desde id_ asignador EXP @28 hasta EXP @29 hacer @30 l_brace ESTATUTOS r_brace .

    $default  reduce using rule 91 (NOCONDICIONAL)


state 254

   83 DECISION_: sino @25 l_brace ESTATUTOS r_brace .

    $default  reduce using rule 83 (DECISION_)
